---
title: Parallel computing in R
author: Mengran Li
date: '2022-01-08'
slug: []
categories:
  - R
  - Statistics
tags: []
authors: [Mengran Li]
description: ''
draft: no
featuredImage: ''
lastmod: '2022-01-08T17:45:37Z'
series: []
toc: no
---

  
  There is a package `Parallel`

`detectCores()`: return how many cores exist on your PC.

`cl <- makeCluster(np)`: initialize a cluster mc with np processes.



Apply Operations using Clusters:
  
  `clusterCall`, `clusterEvalQ`, `clusterApply`, `clusterExport`, `clusterMap`, 

`parLapply`, `parSapply`, `parApply`, `parRapply`, `parCapply`



`stopCluster(cl)`: release the occupied cores.

## An example

Check how many cores exist on my PC.

```{r}
library(parallel)
detectCores()
```

Define a function.

```{r}
sim <- function(x){
  rnorm(1, mean = x)
}
```



Use `parallel` to speed up the calculation.



```{r}
SimParallel <- function(x, nc){
  cl <- makeCluster(nc)
  result = parSapply(cl = cl, x, sim)
  stopCluster(cl)
  return(result)
}
out <- SimParallel(1:10000, 8)
```

