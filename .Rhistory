blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
<<<<<<< HEAD
=======
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
>>>>>>> parent of c0a5478 (CV)
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site(startup = TRUE)
blogdown:::new_post_addin()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
library(bookdown)
library(tinytex)
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site(startup = TRUE)
blogdown:::new_post_addin()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site()
blogdown:::preview_site(startup = TRUE)
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site()
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
library(ggplot2)
library(maps)
data(us.cities)
force(us.cities)
library(ggplot2)
library(maps)
data(us.cities)
head(us.cities)
library(ggplot2)
library(maps)
data(us.cities)
knit::table(us.cities)
library(ggplot2)
library(maps)
data(us.cities)
knitr::kable(head(us.cities))
ggplot(us.cities, aes(x = long, y = lat)) +
borders("state")
ggplot() +
borders("state")
ggplot(us.cities, aes(x = long, y = lat)) +
borders("state")
ggplot(us.cities, aes(x = long, y = lat)) +
geom_point()+
borders("state")
ggplot(us.cities %>% subset(pop > 5000000), aes(x = long, y = lat)) +
geom_point()+
borders("state")
library(tidyverse)
ggplot(us.cities %>% subset(pop > 5000000), aes(x = long, y = lat)) +
geom_point()+
borders("state")
library(tidyverse)
ggplot(us.cities, aes(x = long, y = lat)) +
geom_point()+
borders("state")
us.cities <- subset(us.cities, pop > 5000000)
ggplot(us.cities, aes(x = long, y = lat)) +
geom_point()+
borders("state")
subset(us.cities, pop > 5000000)
data(us.cities)
knitr::kable(head(us.cities))
us.cities <- subset(us.cities, pop > 500000)
ggplot(us.cities, aes(x = long, y = lat)) +
geom_point()+
borders("state")
us.cities <- subset(us.cities, pop > 500000)
ggplot(us.cities, aes(x = long, y = lat)) +
geom_point()+
borders("state")
us.cities <- subset(us.cities, pop > 500000)
ggplot(us.cities, aes(x = long, y = lat)) +
geom_point(aes(color = pop))+
borders("state")
us.cities <- subset(us.cities, pop > 500000)
ggplot(us.cities, aes(x = long, y = lat)) +
geom_point(aes(color = as.factor(pop)))+
borders("state")
us.cities <- subset(us.cities, pop > 500000)
ggplot(us.cities, aes(x = long, y = lat)) +
geom_point(aes(color = pop))+
borders("state")
ggplot(us.cities, aes(x = long, y = lat)) +
geom_point(aes(color = pop))+
borders("state")+
coord_map()
?coord_map
ggplot(us.cities, aes(x = long, y = lat)) +
geom_point(aes(color = pop))+
borders("state")+
coord_map("gilbert")
library(mapproj)
install.packages("mapproj")
library(mapproj)
ggplot(us.cities, aes(x = long, y = lat)) +
geom_point(aes(color = pop))+
borders("state")+
coord_map("gilbert")
library(mapproj)
ggplot(us.cities, aes(x = long, y = lat)) +
geom_point(aes(color = pop))+
borders("state")+
coord_map()
setwd("F:\\StreamFlow")
load("Stream.Rdata")
setwd("F:\\StreamFlow")
load("Stream.Rdata")
View(Stream)
Stream <- Stream[Q >= 0]
library(data.table)
setwd("F:\\StreamFlow")
load("Stream.Rdata")
Stream <- Stream[Q >= 0]
Stream_plot <- Stream[, c("Site", "Q", "DecYear", "Month", "Region")]
setkey(Stream_plot, Region)
Stream_mean <- Stream_plot[, mean(Q), by = Region]
names(Stream_mean) <- c("huc2", "mean")
rm(Stream, Stream_plot)
bound <- sf::st_read(dsn = "F:/StreamFlow/wbdhu2_a_us_september2020.gdb")
bound <- subset(bound, !huc2 %in% c("19","20","21","22"))
bound <- full_join(bound, Stream_mean, by = c("huc2" = "huc2"))
GetURL <- function(service, host = "basemap.nationalmap.gov") {
sprintf("https://%s/arcgis/services/%s/MapServer/WmsServer", host, service)
}
pal <- colorNumeric(
palette = colorRampPalette(c("skyblue", "darkblue"))(length(bound$mean)),
domain = bound$mean
)
library(leaflet)
GetURL <- function(service, host = "basemap.nationalmap.gov") {
sprintf("https://%s/arcgis/services/%s/MapServer/WmsServer", host, service)
}
pal <- colorNumeric(
palette = colorRampPalette(c("skyblue", "darkblue"))(length(bound$mean)),
domain = bound$mean
)
leaflet(bound) %>%
setView(lng = -95, lat = 40, zoom = 4)%>%
addPolygons(color = ~ pal(mean), weight = 1, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5,label = ~htmltools::htmlEscape(paste(huc2, name)),
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE),
group = "Region")%>%
addCircleMarkers(data = Siteinfo,
lng = ~dec_lon_va,
lat = ~dec_lat_va,
radius = ~3,
stroke = FALSE,
fill = TRUE,
color = "red",
fillOpacity = 0.4,
group = "Site"
)%>%
addLegend("bottomright",
pal = pal,
values = ~mean,
title = "Mean",
labFormat = labelFormat(),
opacity = 1,
group="Region"
) %>%
addWMSTiles(GetURL("USGSHydroCached"),layers = "0", group = "River")%>%
addProviderTiles("Esri.WorldImagery",group = "Topography")%>%
addLayersControl(
overlayGroups =c("River", "Topography", "Region","Site"),
options = layersControlOptions(collapsed=FALSE)
)
bound <- sf::st_read(dsn = "F:/StreamFlow/wbdhu2_a_us_september2020.gdb")
bound <- subset(bound, !huc2 %in% c("19","20","21","22"))
setwd("F:\\StreamFlow")
load("Stream.Rdata")
Stream <- Stream[Q >= 0]
Stream_plot <- Stream[, c("Site", "Q", "DecYear", "Month", "Region")]
setkey(Stream_plot, Region)
Stream_mean <- Stream_plot[, mean(Q), by = Region]
names(Stream_mean) <- c("huc2", "mean")
rm(Stream, Stream_plot)
bound <- sf::st_read(dsn = "F:/StreamFlow/wbdhu2_a_us_september2020.gdb")
bound <- subset(bound, !huc2 %in% c("19","20","21","22"))
bound <- full_join(bound, Stream_mean, by = c("huc2" = "huc2"))
setwd("F:\Mengran\content\posts\2021-04-01-drawing-maps-in-r")
setwd("F:/Mengran/content/posts/2021-04-01-drawing-maps-in-r")
save(bound,Siteinfo,filt="bound.Rdata")
save(bound,Siteinfo,file="bound.Rdata")
load("bound.Rdata")
library(leaflet)
GetURL <- function(service, host = "basemap.nationalmap.gov") {
sprintf("https://%s/arcgis/services/%s/MapServer/WmsServer", host, service)
}
pal <- colorNumeric(
palette = colorRampPalette(c("skyblue", "darkblue"))(length(bound$mean)),
domain = bound$mean
)
leaflet(bound) %>%
setView(lng = -95, lat = 40, zoom = 4)%>%
addPolygons(color = ~ pal(mean), weight = 1, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5,label = ~htmltools::htmlEscape(paste(huc2, name)),
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE),
group = "Region")%>%
addCircleMarkers(data = Siteinfo,
lng = ~dec_lon_va,
lat = ~dec_lat_va,
radius = ~3,
stroke = FALSE,
fill = TRUE,
color = "red",
fillOpacity = 0.4,
group = "Site"
)%>%
addLegend("bottomright",
pal = pal,
values = ~mean,
title = "Mean",
labFormat = labelFormat(),
opacity = 1,
group="Region"
) %>%
addWMSTiles(GetURL("USGSHydroCached"),layers = "0", group = "River")%>%
addProviderTiles("Esri.WorldImagery",group = "Topography")%>%
addLayersControl(
overlayGroups =c("River", "Topography", "Region","Site"),
options = layersControlOptions(collapsed=FALSE)
)
setwd("F:/Mengran/content/posts/2021-04-01-drawing-maps-in-r")
load("bound.Rdata")
GetURL <- function(service, host = "basemap.nationalmap.gov") {
sprintf("https://%s/arcgis/services/%s/MapServer/WmsServer", host, service)
}
pal <- colorNumeric(
palette = colorRampPalette(c("skyblue", "darkblue"))(length(bound$mean)),
domain = bound$mean
)
leaflet(bound) %>%
setView(lng = -95, lat = 40, zoom = 4)%>%
addPolygons(color = ~ pal(mean), weight = 1, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5,label = ~htmltools::htmlEscape(paste(huc2, name)),
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE),
group = "Region")%>%
addCircleMarkers(data = Siteinfo,
lng = ~dec_lon_va,
lat = ~dec_lat_va,
radius = ~3,
stroke = FALSE,
fill = TRUE,
color = "red",
fillOpacity = 0.4,
group = "Site"
)%>%
addLegend("bottomright",
pal = pal,
values = ~mean,
title = "Mean",
labFormat = labelFormat(),
opacity = 1,
group="Region"
) %>%
addWMSTiles(GetURL("USGSHydroCached"),layers = "0", group = "River")%>%
addProviderTiles("Esri.WorldImagery",group = "Topography")%>%
addLayersControl(
overlayGroups =c("River", "Topography", "Region","Site"),
options = layersControlOptions(collapsed=FALSE)
)
rmarkdown::find_pandoc(version = "2.9.1")
rmarkdown::find_pandoc()
map <- leaflet(bound) %>%
setView(lng = -95, lat = 40, zoom = 4)%>%
addPolygons(color = ~ pal(mean), weight = 1, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5,label = ~htmltools::htmlEscape(paste(huc2, name)),
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE),
group = "Region")%>%
addCircleMarkers(data = Siteinfo,
lng = ~dec_lon_va,
lat = ~dec_lat_va,
radius = ~3,
stroke = FALSE,
fill = TRUE,
color = "red",
fillOpacity = 0.4,
group = "Site"
)%>%
addLegend("bottomright",
pal = pal,
values = ~mean,
title = "Mean",
labFormat = labelFormat(),
opacity = 1,
group="Region"
) %>%
addWMSTiles(GetURL("USGSHydroCached"),layers = "0", group = "River")%>%
addProviderTiles("Esri.WorldImagery",group = "Topography")%>%
addLayersControl(
overlayGroups =c("River", "Topography", "Region","Site"),
options = layersControlOptions(collapsed=FALSE)
)
?htmlwidgets::saveWidget
htmlwidgets::saveWidget(map,"map.html")
highcharter::export_hc(map, "filename.js")
install.packages("highcharter")
highcharter::export_hc(map, "filename.js")
is.list(map)
hc <- leaflet(bound) %>%
setView(lng = -95, lat = 40, zoom = 4)%>%
addPolygons(color = ~ pal(mean), weight = 1, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5,label = ~htmltools::htmlEscape(paste(huc2, name)),
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE),
group = "Region")%>%
addCircleMarkers(data = Siteinfo,
lng = ~dec_lon_va,
lat = ~dec_lat_va,
radius = ~3,
stroke = FALSE,
fill = TRUE,
color = "red",
fillOpacity = 0.4,
group = "Site"
)%>%
addLegend("bottomright",
pal = pal,
values = ~mean,
title = "Mean",
labFormat = labelFormat(),
opacity = 1,
group="Region"
) %>%
addWMSTiles(GetURL("USGSHydroCached"),layers = "0", group = "River")%>%
addProviderTiles("Esri.WorldImagery",group = "Topography")%>%
addLayersControl(
overlayGroups =c("River", "Topography", "Region","Site"),
options = layersControlOptions(collapsed=FALSE)
)
highcharter::export_hc(hc, "filename.js")
highcharter::export_hc(object = hc$x$options,hc, "filename.js")
htmltools::includeHTML("F:/StreamFlow/Report/Map.html")
htmltools::includeHTML("F:/Mengran/content/posts/2021-04-01-drawing-maps-in-r/map.html")
htmlwidgets::saveWidget(map, file = "figure.html", selfcontained = TRUE)
library(leaflet)
library(widgetframe)
## Loading required package: htmlwidgets
load("F:/Mengran/content/posts/2021-04-01-drawing-maps-in-r/bound.Rdata")
GetURL <- function(service, host = "basemap.nationalmap.gov") {
sprintf("https://%s/arcgis/services/%s/MapServer/WmsServer", host, service)
}
pal <- colorNumeric(
palette = colorRampPalette(c("skyblue", "darkblue"))(length(bound$mean)),
domain = bound$mean
)
map <- leaflet(bound) %>%
setView(lng = -95, lat = 40, zoom = 4)%>%
addPolygons(color = ~ pal(mean), weight = 1, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5,label = ~htmltools::htmlEscape(paste(huc2, name)),
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE),
group = "Region")%>%
addCircleMarkers(data = Siteinfo,
lng = ~dec_lon_va,
lat = ~dec_lat_va,
radius = ~3,
stroke = FALSE,
fill = TRUE,
color = "red",
fillOpacity = 0.4,
group = "Site"
)%>%
addLegend("bottomright",
pal = pal,
values = ~mean,
title = "Mean",
labFormat = labelFormat(),
opacity = 1,
group="Region"
) %>%
addWMSTiles(GetURL("USGSHydroCached"),layers = "0", group = "River")%>%
addProviderTiles("Esri.WorldImagery",group = "Topography")%>%
addLayersControl(
overlayGroups =c("River", "Topography", "Region","Site"),
options = layersControlOptions(collapsed=FALSE)
)
frameWidget(map)
blogdown:::serve_site()
load("F:/Mengran/content/posts/2021-04-01-drawing-maps-in-r/bound.Rdata")
blogdown:::new_post_addin()
pagedown::poster_jacobs
library(pagedown)
devtools::install_github("nstrayer/datadrivencv")
servr::httd()
? pagedown::chrome_print
blogdown:::preview_site()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::preview_site()
blogdown:::serve_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
xaringan::inf_mr()
xaringan::inf_mr()
usethis::edit_r_environ()
usethis::use_course("rstd.io/wtf-source-package")
usethis::edit_r_environ()
Sys.getenv()
Sys.getenv("PAGEDOWN_CHROME","C:/Users/MengranLi/AppData/Local/Google/Chrome/Application/chrome.exe")
Sys.getenv
Sys.getenv()
blogdown:::preview_site()
Sys.getenv(x="PAGEDOWN_CHROME","C:/Users/MengranLi/AppData/Local/Google/Chrome/Application/chrome.exe")
Sys.getenv("PAGEDOWN_CHROME")
Sys.setenv(PAGEDOWN_CHROME="C:/Users/MengranLi/AppData/Local/Google/Chrome/Application/chrome.exe")
Sys.getenv()
blogdown:::new_post_addin()
<<<<<<< HEAD
blogdown:::preview_site()
blogdown:::preview_site()
Sys.setenv(PAGEDOWN_CHROME="C:/Users/MengranLi/AppData/Local/Google/Chrome/Application/chrome.exe")
Sys.setenv(PAGEDOWN_CHROME = "C:\Users\MengranLi\AppData\Local\Google\Chrome\Application\chrome.exe")
Sys.setenv(PAGEDOWN_CHROME = "C:/Users/MengranLi/AppData/Local/Google/Chrome/Application/chrome.exe")
blogdown:::preview_site()
http://localhost:4321/resume/
blogdown:::preview_site()
Sys.setenv(PAGEDOWN_CHROME  = "C:/Users/MengranLi/AppData/Local/Google/Chrome/Application/chrome.exe")
=======
>>>>>>> parent of c0a5478 (CV)
xaringan:::inf_mr()
Sys.setenv(PAGEDOWN_CHROME  = "C:/Users/MengranLi/AppData/Local/Google/Chrome/Application/chrome.exe")
blogdown:::preview_site()
